package slava.puzzle.sudoku.solver.variations;

import slava.puzzle.sudoku.solver.AbstractSudokuField;
/**
 * Sudoku contains nine 4x4 squares:
 * (See D:\Текущее\Puzzles\2011\sudokuparket.doc for Parket-1 and so on)
 * Parket-0     Parket-1
 *     aabc         abcc
 *     adde         adde
 *     fddg         fddg
 *     higg         hhig
 *     
 */
public class ParketSudokuField extends AbstractSudokuField {
	public static int P0 = 0;
	public static int P1 = 1;
	public static int P2 = 2;
	public static int P3 = 3;
	public static int P4 = 4;
	public static int P5 = 5;
	
	int width = 12;

	int[] lastLineIndex = { 8,14,20,26,35,41,47,53,62,68,74,80};

	int[] spaces = {
	  1,0,0,  1,0,0,  1,0,0,
	    2,0,    2,0,    2,0,
	0,    2,0,    2,0,    2,
	0,0,    2,0,    2,0,
	  1,0,0,  1,0,0,  1,0,0,
	    2,0,    2,0,    2,0,
	0,    2,0,    2,0,    2,
	0,0,    2,0,    2,0,
	  1,0,0,  1,0,0,  1,0,0,
	    2,0,    2,0,    2,0,
	0,    2,0,    2,0,    2,
	0,0,    2,0,    2,0,
};
	int[] order = null;

	int[] fakeIndices = {};

	public ParketSudokuField() {
		init(P0);
	}

	public ParketSudokuField(int kind) {
		init(kind);
	}

	public int getColorCount() {
		return 9;
	}

	void init(int kind) {
		size = 81;
		if(kind == P0) {
			init0();
		} else if(kind == P1) {
			init1();
		} else if(kind == P2) {
			init2();
		} else if(kind == P3) {
			init3();
		} else if(kind == P4) {
			init4();
		} else if(kind == P5) {
			init5b();
		}
		buildPlaceToRegions();
	}

	void init0() {
		lastLineIndex = new int[]{ 8,14,20,26,35,41,47,53,62,68,74,80};

		spaces = new int[]{
			  1,0,0,  1,0,0,  1,0,0,
			    2,0,    2,0,    2,0,
			0,    2,0,    2,0,    2,
			0,0,    2,0,    2,0,
			  1,0,0,  1,0,0,  1,0,0,
			    2,0,    2,0,    2,0,
			0,    2,0,    2,0,    2,
			0,0,    2,0,    2,0,
			  1,0,0,  1,0,0,  1,0,0,
			    2,0,    2,0,    2,0,
			0,    2,0,    2,0,    2,
			0,0,    2,0,    2,0,
		};

		regions = new int[][]{
			{ 0, 1, 2, 3, 4, 5, 6, 7, 8},
			{ 0, 9,10, 3,11,12, 6,13,14},
			{15, 9,16,17,11,18,19,13,20},
			{21,22,16,23,24,18,25,26,20},
			{27,28,29,30,31,32,33,34,35},
			{27,36,37,30,38,39,33,40,41},
			{42,36,43,44,38,45,46,40,47},
			{48,49,43,50,51,45,52,53,47},
			{54,55,56,57,58,59,60,61,62},
			{54,63,64,57,65,66,60,67,68},
			{69,63,70,71,65,72,73,67,74},
			{75,76,70,77,78,72,79,80,74},

			{ 0,15,21,27,42,48,54,69,75},
			{ 0, 9,22,27,36,49,54,63,76},
			{ 1, 9,16,28,36,43,55,63,70},
			{ 2,10,16,29,37,43,56,64,70},
			{ 3,17,23,30,44,50,57,71,77},
			{ 3,11,24,30,38,51,57,65,78},
			{ 4,11,18,31,38,45,58,65,72},
			{ 5,12,18,32,39,45,59,66,72},
			{ 6,19,25,33,46,52,60,73,79},
			{ 6,13,26,33,40,53,60,67,80},
			{ 7,13,20,34,40,47,61,67,74},
			{ 8,14,20,35,41,47,62,68,74},

			{ 0, 1, 2, 9,10,15,16,21,22},
			{ 3, 4, 5,11,12,17,18,23,24},
			{ 6, 7, 8,13,14,19,20,25,26},
			{27,28,29,36,37,42,43,48,49},
			{30,31,32,38,39,44,45,50,51},
			{33,34,35,40,41,46,47,52,53},
			{54,55,56,63,64,69,70,75,76},
			{57,58,59,65,66,71,72,77,78},
			{60,61,62,67,68,73,74,79,80},
		};
	}

	static int X = 100;
	void init1() {
		int[] parket = {
			1,	2,	3,	X,	10,	11,	12,	X,	19,	20,	21,	X,
			X,	5,	X,	6,	X,	14,	X,	15,	X,	23,	X,	24,
			4,	X,	X,	X,	13,	X,	X,	X,	22,	X,	X,	X,
			7,	X,	8,	9,	16,	X,	17,	18,	25,	X,	26,	27,
			28,	29,	30,	X,	37,	38,	39,	X,	46,	47,	48,	X,
			X,	32,	X,	33,	X,	41,	X,	42,	X,	50,	X,	51,
			31,	X,	X,	X,	40,	X,	X,	X,	49,	X,	X,	X,
			34,	X,	35,	36,	43,	X,	44,	45,	52,	X,	53,	54,
			55,	56,	57,	X,	64,	65,	66,	X,	73,	74,	75,	X,
			X,	59,	X,	60,	X,	68,	X,	69,	X,	77,	X,	78,
			58,	X,	X,	X,	67,	X,	X,	X,	76,	X,	X,	X,
			61,	X,	62,	63,	70,	X,	71,	72,	79,	X,	80,	81,
		};
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 1, 5, 6,10,14,15,19,23,24},
			{ 4, 5, 9,13,14,18,22,23,27},
			{ 7, 8, 9,16,17,18,25,26,27},
			{28,29,30,37,38,39,46,47,48},
			{28,32,33,37,41,42,46,50,51},
			{31,32,36,40,41,45,49,50,54},
			{34,35,36,43,44,45,52,53,54},
			{55,56,57,64,65,66,73,74,75},
			{55,59,60,64,68,69,73,77,78},
			{58,59,63,67,68,72,76,77,81},
			{61,62,63,70,71,72,79,80,81},

			{ 1, 4, 7,28,31,34,55,58,61},
			{ 2, 5, 7,29,32,34,56,59,61},
			{ 3, 5, 8,30,32,35,57,59,62},
			{ 3, 6, 9,30,33,36,57,60,63},
			{10,13,16,37,40,43,64,67,70},
			{11,14,16,38,41,43,65,68,70},
			{12,14,17,39,41,44,66,68,71},
			{12,15,18,39,42,45,66,69,72},
			{19,22,25,46,49,52,73,76,79},
			{20,23,25,47,50,52,74,77,79},
			{21,23,26,48,50,53,75,77,80},
			{21,24,27,48,51,54,75,78,81},
		};
		reduce(regions);
	}

	void reduce(int[][] regions) {
		for (int i = 0; i < regions.length; i++) {
			for (int j = 0; j < regions[i].length; j++) {
				regions[i][j]--;
			}
		}
	}
	void reduce(int[] a) {
		for (int i = 0; i < a.length; i++) {
			a[i]--;
		}
	}

	void computeSpaces(int[] parket) {
		order = new int[size];
		reduce(parket);
		int line = 0;
		int x = 0;
		int last = -1;
		int index = -1;
		int s = 0;
		for (int i = 0; i < parket.length; i++) {
			if(parket[i] == X - 1) {
				s++;
			} else {
				last = parket[i];
				index++;
				order[index] = last;
				spaces[index] = s;
				s = 0;
			}
			x++;
			if(x == width) {
				lastLineIndex[line] = index;
				line++;
				x = 0;
				s = 0;
			}
		}
	}

	void init2() {
		int[] parket = {
			1,	X,	2,	3,	10,	X,	11,	12,	19,	X,	20,	21,
			X,	4,	5,	X,	X,	13,	14,	X,	X,	22,	23,	X,
			6,	7,	8,	X,	15,	16,	17,	X,	24,	25,	26,	X,
			9,	X,	X,	X,	18,	X,	X,	X,	27,	X,	X,	X,
			28,	X,	29,	30,	37,	X,	38,	39,	46,	X,	47,	48,
			X,	31,	32,	X,	X,	40,	41,	X,	X,	49,	50,	X,
			33,	34,	35,	X,	42,	43,	44,	X,	51,	52,	53,	X,
			36,	X,	X,	X,	45,	X,	X,	X,	54,	X,	X,	X,
			55,	X,	56,	57,	64,	X,	65,	66,	73,	X,	74,	75,
			X,	58,	59,	X,	X,	67,	68,	X,	X,	76,	77,	X,
			60,	61,	62,	X,	69,	70,	71,	X,	78,	79,	80,	X,
			63,	X,	X,	X,	72,	X,	X,	X,	81,	X,	X,	X,
		};
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 1, 4, 5,10,13,14,19,22,23},
			{ 6, 7, 8,15,16,17,24,25,26},
			{ 9, 7, 8,18,16,17,27,25,26},
			{28,29,30,37,38,39,46,47,48},
			{28,31,32,37,40,41,46,49,50},
			{33,34,35,42,43,44,51,52,53},
			{36,34,35,45,43,44,54,52,53},
			{55,56,57,64,65,66,73,74,75},
			{55,58,59,64,67,68,73,76,77},
			{60,61,62,69,70,71,78,79,80},
			{63,61,62,72,70,71,81,79,80},

			{ 1, 6, 9,28,33,36,55,60,63},
			{ 1, 4, 7,28,31,34,55,58,61},
			{ 2, 5, 8,29,32,35,56,59,62},
			{ 3, 5, 8,30,32,35,57,59,62},
			{10,15,18,37,42,45,64,69,72},
			{10,13,16,37,40,43,64,67,70},
			{11,14,17,38,41,44,65,68,71},
			{12,14,17,39,41,44,66,68,71},
			{19,24,27,46,51,54,73,78,81},
			{19,22,25,46,49,52,73,76,79},
			{20,23,26,47,50,53,74,77,80},
			{21,23,26,48,50,53,75,77,80},
		};
		reduce(regions);
	}

	void init3() {
		int[] parket = {
			1,	X,	X,	2,	3,	10,	X,	X,	11,	12,	19,	X,	X,	20,	21,
			4,	5,	X,	X,	6,	13,	14,	X,	X,	15,	22,	23,	X,	X,	24,
			7,	8,	9,	X,	X,	16,	17,	18,	X,	X,	25,	26,	27,	X,	X,
			28,	X,	X,	29,	30,	37,	X,	X,	38,	39,	46,	X,	X,	47,	48,
			31,	32,	X,	X,	33,	40,	41,	X,	X,	42,	49,	50,	X,	X,	51,
			34,	35,	36,	X,	X,	43,	44,	45,	X,	X,	52,	53,	54,	X,	X,
			55,	X,	X,	56,	57,	64,	X,	X,	65,	66,	73,	X,	X,	74,	75,
			58,	59,	X,	X,	60,	67,	68,	X,	X,	69,	76,	77,	X,	X,	78,
			61,	62,	63,	X,	X,	70,	71,	72,	X,	X,	79,	80,	81,	X,	X,
		};
		width = 15;
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 4, 5, 6,13,14,15,22,23,24},
			{ 7, 8, 9,16,17,18,25,26,27},
			{28,29,30,37,38,39,46,47,48},
			{31,32,33,40,41,42,49,50,51},
			{34,35,36,43,44,45,52,53,54},
			{55,56,57,64,65,66,73,74,75},
			{58,59,60,67,68,69,76,77,78},
			{61,62,63,70,71,72,79,80,81},

			{ 1, 4, 7,28,31,34,55,58,61},
			{ 1, 5, 8,28,32,35,55,59,62},
			{ 1, 5, 9,28,32,36,55,59,63},
			{ 2, 5, 9,29,32,36,56,59,63},
			{ 3, 6, 9,30,33,36,57,60,63},
			{10,13,16,37,40,43,64,67,70},
			{10,14,17,37,41,44,64,68,71},
			{10,14,18,37,41,45,64,68,72},
			{11,14,18,38,41,45,65,68,72},
			{12,15,18,39,42,45,66,69,72},
			{19,22,25,46,49,52,73,76,79},
			{19,23,26,46,50,53,73,77,80},
			{19,23,27,46,50,54,73,77,81},
			{20,23,27,47,50,54,74,77,81},
			{21,24,27,48,51,54,75,78,81},
		};

		reduce(regions);
	}

	void init4() {
		int[] parket = {
			1,	X,	X,	2,	3,	10,	X,	X,	11,	12,	19,	X,	X,	20,	21,
			4,	X,	5,	X,	6,	13,	X,	14,	X,	15,	22,	X,	23,	X,	24,
			7,	8,	X,	9,	X,	16,	17,	X,	18,	X,	25,	26,	X,	27,	X,
			28,	X,	X,	29,	30,	37,	X,	X,	38,	39,	46,	X,	X,	47,	48,
			31,	X,	32,	X,	33,	40,	X,	41,	X,	42,	49,	X,	50,	X,	51,
			34,	35,	X,	36,	X,	43,	44,	X,	45,	X,	52,	53,	X,	54,	X,
			55,	X,	X,	56,	57,	64,	X,	X,	65,	66,	73,	X,	X,	74,	75,
			58,	X,	59,	X,	60,	67,	X,	68,	X,	69,	76,	X,	77,	X,	78,
			61,	62,	X,	63,	X,	70,	71,	X,	72,	X,	79,	80,	X,	81,	X,
		};
		width = 15;
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 4, 5, 6,13,14,15,22,23,24},
			{ 7, 8, 9,16,17,18,25,26,27},
			{28,29,30,37,38,39,46,47,48},
			{31,32,33,40,41,42,49,50,51},
			{34,35,36,43,44,45,52,53,54},
			{55,56,57,64,65,66,73,74,75},
			{58,59,60,67,68,69,76,77,78},
			{61,62,63,70,71,72,79,80,81},

			{ 1, 4, 7,28,31,34,55,58,61},
			{ 1, 4, 8,28,31,35,55,58,62},
			{ 2, 5, 8,29,32,35,56,59,62},
			{ 2, 6, 9,29,33,36,56,60,63},
			{ 3, 6, 9,30,33,36,57,60,63},
			{10,13,16,37,40,43,64,67,70},
			{10,13,17,37,40,44,64,67,71},
			{11,14,17,38,41,44,65,68,71},
			{11,15,18,38,42,45,65,69,72},
			{12,15,18,39,42,45,66,69,72},
			{19,22,25,46,49,52,73,76,79},
			{19,22,26,46,49,53,73,76,80},
			{20,23,26,47,50,53,74,77,80},		
			{20,24,27,47,51,54,74,78,81},
			{21,24,27,48,51,54,75,78,81},
		};

		reduce(regions);
	}

	void init5() {
		int[] parket = {
			1,	X,	2,	X,	3,	10,	X,	11,	X,	12,	19,	X,	20,	X,	21,
			4,	X,	5,	X,	6,	13,	X,	14,	X,	15,	22,	X,	23,	X,	24,
			7,	X,	8,	X,	9,	16,	X,	17,	X,	18,	25,	X,	26,	X,	27,
			28,	X,	29,	X,	30,	37,	X,	38,	X,	39,	46,	X,	47,	X,	48,
			31,	X,	32,	X,	33,	40,	X,	41,	X,	42,	49,	X,	50,	X,	51,
			34,	X,	35,	X,	36,	43,	X,	44,	X,	45,	52,	X,	53,	X,	54,
			55,	X,	56,	X,	57,	64,	X,	65,	X,	66,	73,	X,	74,	X,	75,
			58,	X,	59,	X,	60,	67,	X,	68,	X,	69,	76,	X,	77,	X,	78,
			61,	X,	62,	X,	63,	70,	X,	71,	X,	72,	79,	X,	80,	X,	81,
		};
		width = 15;
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 4, 5, 6,13,14,15,22,23,24},
			{ 7, 8, 9,16,17,18,25,26,27},
			{28,29,30,37,38,39,46,47,48},
			{31,32,33,40,41,42,49,50,51},
			{34,35,36,43,44,45,52,53,54},
			{55,56,57,64,65,66,73,74,75},
			{58,59,60,67,68,69,76,77,78},
			{61,62,63,70,71,72,79,80,81},

			{ 1, 4, 7,28,31,34,55,58,61},
			{ 1, 5, 7,28,32,34,55,58,61},
			{ 2, 5, 8,29,32,35,56,59,62},
			{ 3, 5, 9,30,32,36,57,59,63},
//			{ 3, 6, 9,30,33,36,57,60,63},
//			{10,13,16,37,40,43,64,67,70},
//			{10,14,16,37,41,43,64,67,70},
//			{11,14,17,38,41,44,65,68,71},
//			{12,14,18,39,41,45,66,68,72},
//			{12,15,18,39,42,45,66,69,72},
//			{19,22,25,46,49,52,73,76,79},
//			{19,23,25,46,50,52,73,76,79},
//			{20,23,26,47,50,53,74,77,80},
//			{21,23,27,48,50,54,75,77,81},
			{21,24,27,48,51,54,75,78,81},
		};

		reduce(regions);
	}

	void init5b() {
		int[] parket = {
			1,	X,	2,	3,	10,	X,	11,	12,	19,	X,	20,	21,
			4,	5,	X,	6,	13,	14,	X,	15,	22,	23,	X,	24,
			7,	8,	9,	X,	16,	17,	18,	X,	25,	26,	27,	X,
			28,	X,	29,	30,	37,	X,	38,	39,	46,	X,	47,	48,
			31,	32,	X,	33,	40,	41,	X,	42,	49,	50,	X,	51,
			34,	35,	36,	X,	43,	44,	45,	X,	52,	53,	54,	X,
			55,	X,	56,	57,	64,	X,	65,	66,	73,	X,	74,	75,
			58,	59,	X,	60,	67,	68,	X,	69,	76,	77,	X,	78,
			61,	62,	63,	X,	70,	71,	72,	X,	79,	80,	81,	X,
		};
		width = 12;
		computeSpaces(parket);

		regions = new int[][]{
			{ 1, 2, 3, 4, 5, 6, 7, 8, 9},
			{10,11,12,13,14,15,16,17,18},
			{19,20,21,22,23,24,25,26,27},
			{28,29,30,31,32,33,34,35,36},
			{37,38,39,40,41,42,43,44,45},
			{46,47,48,49,50,51,52,53,54},
			{55,56,57,58,59,60,61,62,63},
			{64,65,66,67,68,69,70,71,72},
			{73,74,75,76,77,78,79,80,81},

			{ 1, 2, 3,10,11,12,19,20,21},
			{ 4, 5, 6,13,14,15,22,23,24},
			{ 7, 8, 9,16,17,18,25,26,27},
			{28,29,30,37,38,39,46,47,48},
			{31,32,33,40,41,42,49,50,51},
			{34,35,36,43,44,45,52,53,54},
			{55,56,57,64,65,66,73,74,75},
			{58,59,60,67,68,69,76,77,78},
			{61,62,63,70,71,72,79,80,81},

			{ 1, 4, 7,28,31,34,55,58,61},
			{ 1, 5, 8,28,32,35,55,59,62},
			{ 2, 5, 9,29,32,36,56,59,63},
			{ 3, 6, 9,30,33,36,57,60,63},
			{10,13,16,37,40,43,64,67,70},
			{10,14,17,37,41,44,64,68,71},
			{11,14,18,38,41,45,65,68,72},
			{12,15,18,39,42,45,66,69,72},
			{19,22,25,46,49,52,73,76,79},
			{19,23,26,46,50,53,73,77,80},
			{20,23,27,47,50,54,74,77,81},
			{21,24,27,48,51,54,75,78,81},

		};

		reduce(regions);
	}

	public String printSolution(int[] solution) {
		StringBuffer sb = new StringBuffer();
		int line = 0;
		int x = 0;
		for (int j = 0; j < size; j++) {
			int i = order == null ? j : order[j];
			int q = spaces[j];
			for (int k = 0; k < q; k++) {
				sb.append(" .");
				x++;
			}
			char c = (isFake(i)) ? '*' :
				(solution[i] < 0) ? '+' :
					(solution[i] == 9) ? 'a' :
			         ("" + (solution[i] + 1)).charAt(0);
			sb.append(" " + c);
			x++;
			if(j == lastLineIndex[line]) {
				while(x < width) {
					sb.append(" .");
					x++;
				}
				x = 0;
				sb.append("\n");
				line++;
			}
		}
		return sb.toString();
	}

	boolean isFake(int i) {
		for (int k = 0; k < fakeIndices.length; k++) if(fakeIndices[k] == i) return true;
		return false;
	}

}
